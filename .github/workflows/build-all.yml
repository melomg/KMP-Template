name: Build all

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  verify_all_apps:
    name: Verify all apps
    runs-on: macOS-latest
    timeout-minutes: 60
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # TODO enable this later when flakiness is gone. See: https://github.com/gradle/wrapper-validation-action/issues/33
      #      - name: Validate Gradle Wrapper
      #        uses: gradle/actions/wrapper-validation@v3

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/android/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      # TODO: Enable when implementing
      #        with:
      #          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 --decode > composeApp/google-services.json

      - name: Check detekt
        run: ./gradlew detekt

      - name: Check lint
        run: ./gradlew lintDebug

  build_android:
    name: Build android app
    runs-on: ubuntu-latest
    needs: verify_all_apps
    timeout-minutes: 60
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      # TODO: Enable when implementing
      #        with:
      #          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON_BASE64 }}" | base64 --decode > composeApp/google-services.json

      - name: Android debug build
        run: ./gradlew assembleDebug --stacktrace

      - name: Run debug unit tests and create jacoco report
        run: ./gradlew testDebugUnitTest

      - name: Upload build outputs (APKs)
        uses: actions/upload-artifact@v4
        with:
          name: build-outputs
          path: composeApp/build/outputs

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: composeApp/build/reports

  build_iOS:
    name: Build iOS app
    runs-on: macOS-latest
    needs: verify_all_apps
    timeout-minutes: 60
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Set Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer

      - name: iOS debug build
        run: cd iosApp && xcodebuild -scheme iosApp -configuration Debug -destination 'platform=iOS Simulator,OS=latest,name=iPhone 16' CODE_SIGNING_ALLOWED='NO'

  build_desktop:
    name: Build desktop app
    runs-on: macOS-latest
    needs: verify_all_apps
    timeout-minutes: 60
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      # TODO: Enable when implementing
      #        with:
      #          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Assemble desktop jar
        run: ./gradlew :composeApp:desktopJar --stacktrace

    # Optional: Upload build artifacts (e.g., the JAR file)
    # - name: Upload Desktop Artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: desktop-app
    #     path: your-desktop-module/build/libs/your-desktop-app.jar
    #     # Adjust path to you

  build_wasm:
    name: Build wasm app
    runs-on: ubuntu-latest
    needs: verify_all_apps
    timeout-minutes: 60
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      # TODO: Enable when implementing
      #        with:
      #          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Wasm Build
        run: ./gradlew wasmJsBrowserDistribution --stacktrace

      # Optional: Upload build artifacts (e.g., the Wasm files)
      # - name: Upload Wasm Artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: wasm-app
      #     path: your-wasm-module/build/dist/wasmJs/productionExecutable/ # Or developmentExecutable
      #     # Adjust path to your actual Wasm output directory
